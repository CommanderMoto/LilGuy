# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0


[include printer_skr_pico.cfg]

[neopixel case_light]
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 8
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.006
initial_GREEN: 0.0
initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

[printer]
kinematics: corexy
max_velocity: 750
max_accel: 10000
max_z_velocity: 35
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#	Thermistor definitions
#####################################################################

[thermistor Trianglelab NTC100K B3950]
## values calibrated against a PT100 reference
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

[thermistor 104NT-4-R025H42G]
temperature1: 25.0
resistance1: 100000.0
temperature2: 160.0
resistance2: 1074.0
temperature3: 300.0
resistance3: 82.78

#####################################################################
#   Extruder
#####################################################################

[extruder]
#full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8째 stepper motor, and set to 400 for OMC(StepperOnline) 0.9째 stepper motor
rotation_distance: 22.23                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
sensor_type: ATC Semitec 104GT-2                                        # Adjust for your hotend thermistor. See 'sensor types' list at end of file
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 290
min_extrude_temp: 10
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.035                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9째
run_current: 0.6	# for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8째 
#run_current: 0.3	# for LDO 36STH17-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
sensor_type: NTC 100K MGB18-104F39050L32                            # For Keenovo, verify yours
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0	                                                    # You can't PWM the delta fan unless using blue wire

[fan]
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010


#####################################################################
#   Filament Sensor
#####################################################################
[filament_motion_sensor smart_sensor]
detection_length: 10.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.

[gcode_macro FILAMENT_RUNOUT]
gcode:
  M117 Filament out
  M300 S1 P10
  M600
  M300 S1 P10

[gcode_macro M300]
gcode:
  {% set S = params.S|default(1000)|int %}
  {% set P = params.P|default(100)|int %}
  SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
  G4 P{P}
  SET_PIN PIN=BEEPER VALUE=0

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


[probe]
#with Long Klicky Probe
pin: ^gpio22
x_offset: 9.5 #(9.5 with front cowling)
y_offset: 0
#z_offset: 14.5
speed: 7
lift_speed: 7

samples: 3
samples_result: median
sample_retract_dist: 2

samples_tolerance: 0.01
samples_tolerance_retries: 10

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

#####################################################################
#	Optional Features
#####################################################################
[firmware_retraction]
retract_length: 0.3
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 35
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
#unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

# Fluidd mandates
[virtual_sdcard]
path: ~/gcode_files

[display_status]
# The display_status module is automatically loaded if a display 
# config section is enabled. It provides the following standard G-Code commands:
#   * Display Message: M117 <message>
#   * Set build percentage: M73 P<percent>

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#####################################################################
#	Macros
#####################################################################
[include mainsail.cfg]
[include klicky-probe.cfg]


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    PRINT_LIGHTS_ON
    {% set bed = params.BED|default(60)|float %}
    {% set extruder = params.EXTRUDER|default(190)|float %}
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    # Start bed heating
    M140 S{bed}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    G0 X0 Y119 F3600
    # Wait for bed to reach temperature
    M190 S{bed}
    # Start extruder heating
    M104 S{extruder}
    # Happy Dance
    G1 Z3 F600
    G1 Z0.25
    # Set and wait for nozzle to reach temperature
    M109 S{extruder}
    # Nozzle wipe line
    G92 E0
    G0 X10 Y119 Z0.20 F1000
    G0 X110 E15 F1500
    G0 X1 E30
    G92 E0

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    PRINT_LIGHTS_STANDBY
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 50.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z+20 F1200             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    G90                            ; absolute positioning
    G0 X60 Y90 F3600               ; park nozzle near rear
    TURN_OFF_HEATERS
    M107                           ; turn off fan
	

[gcode_macro SET_Z_OFFSET]
# Adjust z-offset for bed probe procedure
gcode:
  {% set Z_OFFSET = params.Z_OFFSET|default(0.250)|float %}
  SET_GCODE_OFFSET Z={Z_OFFSET}


[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E60 F300                    ; load
   G1 E25 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  PRINT_END
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PRINT_LIGHTS_ON]
gcode:
    SET_LED LED=case_light RED=1 GREEN=1 BLUE=1

[gcode_macro PRINT_LIGHTS_OFF]
gcode:
    SET_LED LED=case_light RED=0

[gcode_macro PRINT_LIGHTS_STANDBY]
gcode:
    SET_LED LED=case_light RED=0.05

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(50)|float %}
    {% set Z = params.Z|default(100)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro FEED_RATE_TEST]
#Params:
#ACCEL_STEPS (text, comma separated integers): acceleration values to test, passed as a string like ACCEL_STEPS="5000, 10000, 20000"
#TEST_STEPS (text, comma separated texts): tests to run, passed as a string like TEST_STEPS="x_test,y_test,rect_test,diag_test"
#- Options: 
#  - x_test    = Moves x axis
#  - y_test    = Moves y axis
#  - rect_test = Moves in a rectangle
#  - diag_test = Moves x & y diagonally
#  - circle_test = Moves in a circle twice
#DISTANCE_STEPS (text, comma separated floats): distance values to test, passed as a string like DISTANCE_STEPS="30, 22, 45.221"
#SPEED_STEPS (text, comma separated floats): speed (mm/s) values to test, passed as a string like SPEED_STEPS="100, 120, 120.22"
gcode:
  {% if printer.configfile.config.respond is not defined %}
    {action_raise_error("This gcode_macro requires the [respond] section in your printer.cfg")}
  {% endif %}

  # Ugly code to convert a string into an array in jinja
  # TEST_STEPS conversion
  {% set ns_test_steps = namespace(collector="", arr=[]) %}
  {% for char in params.TEST_STEPS|default("x_test,y_test,rect_test,diag_test")|string %}
    {% if char == "," or loop.last %}
      {% if loop.last %}
        {% set ns_test_steps.collector = ns_test_steps.collector ~ char %}
      {% endif %}

      {% set ns_test_steps.arr = ns_test_steps.arr + [ns_test_steps.collector|string] %}
      {% set ns_test_steps.collector = "" %}
    {% else %}
      {% set ns_test_steps.collector = ns_test_steps.collector ~ char %}
    {% endif %}
  {% endfor %}

  # SPEED_STEPS conversion
  {% set ns_speed_steps = namespace(collector="", arr=[]) %}
  {% for char in params.SPEED_STEPS|default("80.0")|string %}
    {% if char == "," or loop.last %}
      {% if loop.last %}
        {% set ns_speed_steps.collector = ns_speed_steps.collector ~ char %}
      {% endif %}

      {% set ns_speed_steps.arr = ns_speed_steps.arr + [ns_speed_steps.collector|float] %}
      {% set ns_speed_steps.collector = "" %}
    {% else %}
      {% set ns_speed_steps.collector = ns_speed_steps.collector ~ char %}
    {% endif %}
  {% endfor %}

  # DISTANCE_STEPS conversion
  {% set ns_distance_steps = namespace(collector="", arr=[]) %}
  {% for char in params.DISTANCE_STEPS|default("40.0")|string %}
    {% if char == "," or loop.last %}
      {% if loop.last %}
        {% set ns_distance_steps.collector = ns_distance_steps.collector ~ char %}
      {% endif %}

      {% set ns_distance_steps.arr = ns_distance_steps.arr + [ns_distance_steps.collector|float] %}
      {% set ns_distance_steps.collector = "" %}
    {% else %}
      {% set ns_distance_steps.collector = ns_distance_steps.collector ~ char %}
    {% endif %}
  {% endfor %}

  # ACCEL_STEPS conversion
  {% set ns_accel_steps = namespace(collector="", arr=[]) %}
  {% for char in params.ACCEL_STEPS|default(printer.toolhead.max_accel|string)|string %}
    {% if char == "," or loop.last %}
      {% if loop.last %}
        {% set ns_accel_steps.collector = ns_accel_steps.collector ~ char %}
      {% endif %}

      {% set ns_accel_steps.arr = ns_accel_steps.arr + [ns_accel_steps.collector|int] %}
      {% set ns_accel_steps.collector = "" %}

    {% else %}
      {% set ns_accel_steps.collector = ns_accel_steps.collector ~ char %}
    {% endif %}
  {% endfor %}

  # Variable  assignment
  {% set center_x_position = printer.toolhead.axis_maximum.x / 2 %}
  {% set center_y_position = printer.toolhead.axis_maximum.y / 2 %}

  # Conversion steps variable assignment
  {% set accel_steps = ns_accel_steps.arr %}
  {% set test_steps = ns_test_steps.arr %}
  {% set distance_steps = ns_distance_steps.arr %}
  {% set speed_steps = ns_speed_steps.arr %}

  SAVE_GCODE_STATE NAME=speed_testing_macro
  {% set testRunCounter = namespace(value=0) %}
  RESPOND PREFIX="Speed-Test - " MSG="Starting Speed testing with" 
  RESPOND PREFIX="- " MSG="distance_steps={distance_steps}"
  RESPOND PREFIX="- " MSG="speed_steps={speed_steps}"
  RESPOND PREFIX="- " MSG="accel_steps={accel_steps}"
  RESPOND PREFIX="- " MSG="test_steps={test_steps}"
  RESPOND PREFIX="" MSG="--------------------"

  # Homing
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

  G90
  G1 X{center_x_position} Y{center_y_position} Z25 F4000

  {% for distance_step in distance_steps %}
    {% for speed_step in speed_steps %}
      {% set speed_feedrate_step = speed_step * 60 %}
      {% for accel_step in accel_steps %}
        {% set testRunCounter.value = testRunCounter.value + 1 %}
        M204 S{accel_step}
        RESPOND PREFIX="Speed-Test - " MSG="Test-Run {testRunCounter.value} => distance: {distance_step} speed: {speed_step} acceleration: {accel_step}"
        
        {% for test_step in test_steps %}
          _{test_step|upper} FEEDRATE={speed_feedrate_step} DISTANCE={distance_step}
        {% endfor %}
      {% endfor %}
    {% endfor %}
  {% endfor %}
  RESTORE_GCODE_STATE NAME=speed_testing_macro

[gcode_macro _X_TEST]
description: Moves the head left/right
gcode:
  {% set speed_feedrate = params.FEEDRATE|default(4800)|float %}
  {% set distance = params.DISTANCE|default(100)|float %}
  G91
  G1 x{distance} F{speed_feedrate}
  G1 x-{distance * 2} F{speed_feedrate}
  G1 x{distance} F{speed_feedrate}
  G90

[gcode_macro _Y_TEST]
description: Moves the head forward/backward
gcode:
  {% set speed_feedrate = params.FEEDRATE|default(4800)|float %}
  {% set distance = params.DISTANCE|default(100)|float %}
  G91
  G1 y{distance} F{speed_feedrate}
  G1 y-{distance * 2} F{speed_feedrate}
  G1 y{distance} F{speed_feedrate}
  G90

[gcode_macro _RECT_TEST]
description: Moves the head in a rectangle
gcode:
  {% set speed_feedrate = params.FEEDRATE|default(4800)|float %}
  {% set distance = params.DISTANCE|default(100)|float %}
  G91
  G1 x-{distance} F{speed_feedrate}
  G1 y-{distance} F{speed_feedrate}
  G1 x{distance * 2} F{speed_feedrate}
  G1 y{distance * 2} F{speed_feedrate}
  G1 x-{distance * 2} F{speed_feedrate}
  G1 y-{distance} F{speed_feedrate}
  G1 x{distance} F{speed_feedrate}
  G90

[gcode_macro _DIAG_TEST]
description: Moves the head diagonally. First spinning the stepper_x, then the stepper_y. (CoreXY)
gcode:
  {% set speed_feedrate = params.FEEDRATE|default(4800)|float %}
  {% set distance = params.DISTANCE|default(100)|float %}
  G91
  G1 x{distance} y{distance} F{speed_feedrate}
  G1 x-{distance * 2} y-{distance * 2} F{speed_feedrate}
  G1 x{distance} y{distance} F{speed_feedrate}
  G1 x{distance} y-{distance} F{speed_feedrate}
  G1 x-{distance * 2} y{distance * 2} F{speed_feedrate}
  G1 x{distance} y-{distance} F{speed_feedrate}
  G90

[gcode_macro _CIRCLE_TEST]
description: Moves the head in a circle twice.
gcode:
  {% set speed_feedrate = params.FEEDRATE|default(4800)|float %}
  {% set distance = params.DISTANCE|default(100)|float %}
  {% if printer.configfile.config.gcode_arcs is not defined %}
    {action_raise_error("The circle test requires the [gcode_arcs] section in your printer.cfg")}
  {% endif %}
  {% for count in range(2) %}
    G2 I{distance} J{distance} F{speed_feedrate}
  {% endfor %} 

##   Sensor Types
##   "Trianglelab NTC100K B3950" (Beta 3950 used in LDO kits)
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "Generic 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"
##   For more information: https://www.klipper3d.org/Config_Reference.html#temperature_sensor

## Footnote about Beta 3950:
## https://github.com/Klipper3d/klipper/issues/4054
## https://github.com/Klipper3d/klipper/pull/4859

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 32.639
#*# pid_ki = 4.945
#*# pid_kd = 53.855
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 55.200
#*# pid_ki = 2.329
#*# pid_kd = 327.058
#*#
#*# [probe]
#*# z_offset = 13.875
#*#
#*# [stepper_z]
#*# position_endstop = 0.241
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.035000, -0.053750, -0.087500
#*# 	0.002500, 0.000000, -0.006250
#*# 	0.038750, 0.046250, 0.047500
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 3
#*# max_y = 105.0
#*# mesh_x_pps = 2
#*# max_x = 105.0
